data "azurerm_client_config" "current" {}

resource "random_id" "random" {
  byte_length = 8
}

locals {
  suffix      = lower(trimspace(var.use_random_suffix ? substr(lower(random_id.random.hex), 1, 5) : var.suffix))
  name_suffix = local.suffix != null ? "${local.suffix}" : ""

  name_aks                     = "${var.aks_name}-${local.name_suffix}"
  name_app_insights            = "${var.appinsights_name}-${local.name_suffix}"
  name_log_analytics_workspace = "${var.log_analytics_workspace_name}-${local.name_suffix}"
  name_manage_identity         = "${var.managed_identity_name}-${local.name_suffix}"
  name_nsg                     = "${var.nsg_name}-${local.name_suffix}"
  name_pip                     = "${var.pip_name}-${local.name_suffix}"
  name_resource_group          = "${var.resource_group_name}-${local.name_suffix}"
  name_ssk_key                 = "${var.ssh_key_name}-${local.name_suffix}"
  name_subnet                  = "${var.subnet_name}-${local.name_suffix}"
  name_vnet                    = "${var.vnet_name}-${local.name_suffix}"

  tags = merge(var.tags, {
    createdAt = "${formatdate("YYYY-MM-DD hh:mm:ss", timestamp())} UTC"
    suffix    = local.suffix
  })
}

resource "azurerm_resource_group" "rg" {
  name     = local.name_resource_group
  location = var.location
  tags     = local.tags

  lifecycle {
    ignore_changes = [
      tags,
    ]
  }
}

module "mi" {
  source              = "./modules/mi"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  name                = local.name_manage_identity
  tags                = local.tags
}

module "log_analytics_workspace" {
  source              = "./modules/log"
  name                = local.name_log_analytics_workspace
  location            = var.location
  resource_group_name = azurerm_resource_group.rg.name
  tags                = local.tags
}

module "application_insights" {
  source                     = "./modules/appi"
  name                       = local.name_app_insights
  location                   = var.location
  resource_group_name        = azurerm_resource_group.rg.name
  log_analytics_workspace_id = module.log_analytics_workspace.id
  tags                       = local.tags
}

module "network" {
  source                     = "./modules/network"
  resource_group_name        = azurerm_resource_group.rg.name
  location                   = azurerm_resource_group.rg.location
  vnet_name                  = local.name_vnet
  vnet_address_space         = var.vnet_address_space
  subnet_name                = local.name_subnet
  subnet_address_space       = var.subnet_address_space
  nsg_name                   = local.name_nsg
  log_analytics_workspace_id = module.log_analytics_workspace.id
  tags                       = local.tags
}

module "public_ip" {
  source              = "./modules/pip"
  resource_group_name = azurerm_resource_group.rg.name
  location            = var.location
  name                = local.name_pip
  tags                = local.tags
}

module "ssh" {
  source              = "./modules/ssh"
  resource_group_name = azurerm_resource_group.rg.name
  resource_group_id   = azurerm_resource_group.rg.id
  location            = var.location
  name                = local.name_ssk_key
  tags                = local.tags
}

module "aks" {
  source                          = "./modules/aks"
  resource_group_id               = azurerm_resource_group.rg.id
  resource_group_name             = azurerm_resource_group.rg.name
  location                        = var.location
  name                            = local.name_aks
  msi_name                        = module.mi.name
  msi_resource_group_name         = module.mi.resource_group_name
  ssh_public_key                  = module.ssh.public_key
  sku                             = var.aks_sku
  dns_prefix                      = lower(var.aks_dns_prefix)
  kubernetes_version              = var.aks_kubernetes_version
  admin_username                  = var.aks_admin_username
  log_analytics_workspace_id      = module.log_analytics_workspace.id
  msi_auth_for_monitoring_enabled = var.aks_oms_agent_addon_msi_auth_for_monitoring_enabled
  system_node_pool_node_count     = var.aks_system_node_pool_node_count
  system_node_pool_vm_size        = var.aks_system_node_pool_vm_size
  system_node_pool_vnet_subnet_id = module.network.subnet_id
  tags                            = local.tags

}

# Gets the Resource Group name of the AKS cluster node, which is created during AKS creation.
# The name is dynamically generated by Azure and is not known before the AKS creation.
data "azurerm_resource_group" "node_resource_group" {
  name = module.aks.node_resource_group
}

module "kaito" {
  source                             = "./modules/kaito"
  resource_group_id                  = azurerm_resource_group.rg.id
  resource_group_name                = azurerm_resource_group.rg.name
  tenant_id                          = data.azurerm_client_config.current.tenant_id
  kaito_aks_namespace                = var.kaito_aks_namespace
  aks_node_resource_group_name       = data.azurerm_resource_group.node_resource_group.name
  aks_oidc_issuer_url                = module.aks.oidc_issuer_url
  aks_name                           = module.aks.name
  aks_id                             = module.aks.id
  aks_location                       = module.aks.location
  kaito_instance_type_vm_size        = var.kaito_instance_type_vm_size
  kaito_service_account_name         = var.kaito_service_account_name
  kaito_identity_name                = module.mi.name
  kaito_identity_resource_group_name = module.mi.resource_group_name
  kaito_ai_model                     = var.kaito_ai_model
  network_security_group_name        = module.network.nsg_name
  tags                               = local.tags
}
